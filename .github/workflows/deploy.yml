name: Despliegue a EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Clonar repositorio
      uses: actions/checkout@v3

    - name: Dar permisos a gradlew
      run: chmod +x gradlew

    - name: Construir el proyecto
      run: ./gradlew clean build

    - name: Verificar existencia del JAR
      run: |
        if [ ! -f app/build/libs/app-1.0-SNAPSHOT-all.jar ]; then
          echo "‚ùå El archivo JAR no fue generado"
          exit 1
        fi
        ls -lh app/build/libs/app-1.0-SNAPSHOT-all.jar

    - name: Crear carpeta destino en EC2 si no existe
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: |
          sudo mkdir -p /opt/apps/backend/
          sudo chmod -R 755 /opt/apps/backend/

    - name: Copiar archivo JAR a EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        source: "app/build/libs/app-1.0-SNAPSHOT-all.jar"
        target: "/opt/apps/backend/"
        timeout: "300s"
        command_timeout: "600s"
        debug: true

    - name: Verificar archivo JAR en EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script:  ls -lh /opt/apps/backend/app-1.0-SNAPSHOT-all.jar

    - name: Ejecutar pre-deploy en EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: sudo /opt/apps/backend/scripts/pre-deploy

    - name: Ejecutar post-deploy en EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        script: sudo /opt/apps/backend/scripts/post-deploy
